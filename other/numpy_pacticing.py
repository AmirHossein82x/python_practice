import numpy as np
a = np.array([0, 1, 2, 3])
print("a: ", a.ndim) # بُعد را نشان می دهد
print("a: ", a.shape)
print("a: ", len(a))
print("---------------------------------------------------")
b = np.array([[0, 1, 2], [3, 4, 5]])
print("b: ", b.ndim)
print("b: ", b.shape)
print("b: ", len(b))
print("---------------------------------------------------")
c = np.arange(10)
print("c: ", c)
print("---------------------------------------------------")
d = np.arange(1, 9, 2)
print("d: ", d)
print("---------------------------------------------------")
e = np.linspace(0, 1, 6) # بین 0 و 1   4عدد  به نسبت های مساوی قرار میدهد تا کل مجموعه 6 عضو داشته باشد 
print("e: ", e)
print("---------------------------------------------------")
f = np.linspace(0, 1, 5, endpoint=False)
print("f: ",f)
print("---------------------------------------------------")
g = np.ones((3, 3))
print("g: ",g)
print("---------------------------------------------------")
h = np.zeros((2, 3))
print("h: ", h)
print("---------------------------------------------------")
i = np.eye(4)
print("i: ",i)
print("---------------------------------------------------")
j = np.diag(np.array([1, 2, 3, 4, 5]))
print("j: ", j)
print("---------------------------------------------------")
np.random.seed(1234) # رندوم را ثابت نگه میدارد
k = np.random.rand(4)
print("k:", k) # بین 0و 1    4تا عدد رندوم انتخاب میکند
print("---------------------------------------------------")
l = np.random.randn(4)
print("l: ", l)
print("---------------------------------------------------")
m = np.array([1, 2, 3, 4])
print("m: ", m.dtype)
print("---------------------------------------------------")
n = np.array([1., 2., 3., 4.])
print("n: ", n.dtype)
print("---------------------------------------------------")
o = np.array([1., 2., 3., 4.], dtype=float)
print("o: ", o)
print("---------------------------------------------------")
p = np.ones((2, 3))
print("p: ", n.dtype)
print("---------------------------------------------------")
q = np.diag(np.arange(3))
print("q: ", q)
print("q: ", q[1][1])
print("---------------------------------------------------")
r = np.array(np.arange(3))
print("r: ", r)
r += 1
print("r: ", r)
r *= 2
print("r: ", r)
print("---------------------------------------------------")
s = np.ones(3) + 1
print("s: ", s)
print("r - s: ", r - s)
print("---------------------------------------------------")
t = np.array(np.arange(3))
print("t: ", t)
print("t - r: ", t - r)
print("---------------------------------------------------")
print("t == r: ", t == r)
print("t > r: ", t > r)
print("---------------------------------------------------")
u1 = np.array([1, 2, 3, 4])
u2 = np.array([4, 2, 2, 4])
u3 = np.array([1, 2, 3, 4])
u4 = np.array([4, 3, 2, 1])
print("u1, u2: ", np.equal(u1, u2))
print("u1, u3: ", np.equal(u1, u3))
print("u1, u4: ", np.equal(u1, u4))
print("u1, u4: ", np.array_equal(u1, u4))
print("---------------------------------------------------")
v = np.array([1, 4, -2, 3])
print("x**3 + 4x**2 - 2x + 3: ", np.polyval(v, [1, 2, 3]))
print("roots: ", np.roots(v))
print("---------------------------------------------------")
w = np.array([1, 4, -2, 3])
print("w: polyint: ", np.polyint(w))
print("w: np.polyder: ", np.polyder(w))
print("---------------------------------------------------")


